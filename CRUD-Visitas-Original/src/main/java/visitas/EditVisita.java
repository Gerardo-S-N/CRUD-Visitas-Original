/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package visitas;

import java.awt.Color;
import java.awt.Image;
import java.io.IOException;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.WindowConstants;

/**
 *
 * @author Gerardo Sánchez Nilo
 */
public class EditVisita extends javax.swing.JFrame {

    ventanaVisitas v;
    visitasOrdinarias[] listaV;
    private int numP = visitasOrdinarias.getNum_parroquias(), indexDecanato = 0, indexMes = 0;
    private boolean validado = false, isComboNombre = false;

    /**
     * Creates new form EditarCSV
     */
    public EditVisita() {
        initComponents();
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.setTitle("Añadir Parroquia");
        this.setLocationRelativeTo(null);
        this.setResizable(false);

    }

    public EditVisita(visitasOrdinarias[] visitas, ventanaVisitas ventana) {
        listaV = visitas;
        v = ventana;

        initComponents();
        Image icon = null;
        try {
            icon = ImageIO.read(getClass().getResource("/visitas/imagenes/icono.png"));
        } catch (IOException ex) {
            Logger.getLogger(ventanaVisitas.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setIconImage(icon);
        this.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.setTitle("Editar Visita");
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        rellenaComboNombre();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboDia = new javax.swing.JComboBox<>();
        comboMes = new javax.swing.JComboBox<>();
        campoAnio = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        comboDecanato = new javax.swing.JComboBox<>();
        comboHorario = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        campoDir = new javax.swing.JTextField();
        botonEnviar = new javax.swing.JButton();
        eEstado = new javax.swing.JLabel();
        comboNombre = new javax.swing.JComboBox<>();
        EtiquetaId = new javax.swing.JLabel();
        labelId = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel1.setText("Nombre Parroquia");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setText("Descripción");

        comboDia.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        comboDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        comboDia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboDiaActionPerformed(evt);
            }
        });

        comboMes.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        comboMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "May", "Jun", "Jul", "Aug", "Sep", "Oct" }));
        comboMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboMesActionPerformed(evt);
            }
        });
        comboMes.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboMesPropertyChange(evt);
            }
        });

        campoAnio.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        campoAnio.setText(getAnio());
        campoAnio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoAnioFocusLost(evt);
            }
        });
        campoAnio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoAnioActionPerformed(evt);
            }
        });
        campoAnio.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                campoAnioPropertyChange(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel3.setText("Decanato");

        comboDecanato.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        comboDecanato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "San Juan Bautista", "Santa Rosa de Lima", "Chapalita", "La Santa Cruz", "Atemajac", "La Visitación", "El Refugio", "Huentitán", "Zapopan Estadio", "Talpita", "Santa Cecilia", "San Ildefonso", "Zalatitán", "Tetlán", "San Andrés", "San Felipe de Jesús", "Analco", "La Luz", "San Pedro", "Miravalle", "Getsenamí de la Cruz", "Lourdes", "Sagrario Metropolitano", "La Paz", "Jesús" }));

        comboHorario.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        comboHorario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "5:00 PM", "10:00 AM" }));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setText("Dirección");

        campoDir.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        campoDir.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoDirFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoDirFocusLost(evt);
            }
        });
        campoDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoDirActionPerformed(evt);
            }
        });

        botonEnviar.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        botonEnviar.setText("Listo");
        botonEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnviarActionPerformed(evt);
            }
        });

        eEstado.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        eEstado.setText("Estado:");

        comboNombre.setEditable(true);
        comboNombre.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        comboNombre.setModel(new javax.swing.DefaultComboBoxModel<>());
        comboNombre.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboNombreItemStateChanged(evt);
            }
        });
        comboNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNombreActionPerformed(evt);
            }
        });
        comboNombre.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                comboNombrePropertyChange(evt);
            }
        });

        EtiquetaId.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        EtiquetaId.setText("Id");

        labelId.setFont(EtiquetaId.getFont());
        labelId.setText("1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botonEnviar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(EtiquetaId, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(comboDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoAnio, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboHorario, 0, 245, Short.MAX_VALUE)
                                .addGap(92, 92, 92))
                            .addComponent(campoDir)
                            .addComponent(comboDecanato, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboNombre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(EtiquetaId)
                    .addComponent(labelId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboHorario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboDecanato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(campoDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonEnviar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(eEstado))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String getAnio() {
        LocalDateTime fecha = LocalDateTime.now();
        return "" + fecha.getYear();
    }

    private void pruebaArch() {

        System.out.println("Ruta Archivo: " + ventanaVisitas.getFile_Path() + " Numero de parroquias: " + visitasOrdinarias.getNum_parroquias());

        try {
            JOptionPane.showMessageDialog(rootPane, "Ultima Parroquia " + listaV[numP].getNombre_parroquia());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void rellenaComboNombre() {
        int id = 0;
        for (int x = 0; x <= numP; x++) {
            comboNombre.addItem(listaV[x].getNombre_parroquia());
        }

    }

    private void agregaVisita() {
        if (numP < listaV.length && validado == true) {
            //se recuperan los valores desde sus respectivos campos

            //Nombre
            listaV[numP + 1].setNombre_parroquia(comboNombre.getSelectedItem().toString());
            ///Fecha
            listaV[numP + 1].setDescO(
                    comboDia.getSelectedItem().toString() + "/"
                    + comboMes.getSelectedItem() + "/" + campoAnio.getText() + " "
                    + comboHorario.getSelectedItem().toString()
            );
            ///Decanato
            listaV[numP + 1].setDecanato(comboDecanato.getSelectedItem().toString());
            comboDecanato.getSelectedIndex();
            ///Dirección
            listaV[numP + 1].setDireccion(campoDir.getText());

            numP += 1;
            //Se incrementa el conteo de las parroquias
            visitasOrdinarias.setNum_parroquias(numP);
            eEstado.setText("¡Entrada " + (numP) + " añadida con Exito!");
            eEstado.setForeground(Color.GREEN);

            v.escribirCSV();
            v.abrir();
            v.calculaProxima();

            switch (JOptionPane.showConfirmDialog(rootPane, "¿Deseas añadir otra entrada?", "¿Qué Deseas hacer?", JOptionPane.YES_NO_OPTION)) {
                case JOptionPane.YES_OPTION:

                    break;
                case JOptionPane.NO_OPTION:
                    dispose();
                    break;
            }

        } else {
            JOptionPane.showMessageDialog(rootPane, "Datos no validos, corrige los datos señalados para continuar", "Error al validar datos", JOptionPane.ERROR_MESSAGE);
        }
    }

    //función que valida si una cadena es Int
    private boolean isInt(String data) {
        try {
            Integer.parseInt(data);
        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }

    private boolean validaCamposT(JTextField campoT) {

        return !(campoT.getText().isEmpty() || campoT.getText().charAt(0) == ' ');
    }

    //Función que rellena la visita según el ID seleccionado
    private void rellenaVisita(int ID) {
        labelId.setText("" + listaV[ID].getId());

        String fecha = listaV[ID].getDescripcion();
        String[] parsedFecha = parseFecha(fecha);

        /*System.out.println("Dia: " + parsedFecha[1] + "\nMes: " + parsedFecha[2]
                + "\nAnio: " + parsedFecha[3] + "\nDirección: " + listaV[ID].getDireccion());*/
        ///Seleccionamos el mes deseadoen el combo, para refrescar los numeros
        rellenaDiasMes(parsedFecha[2].substring(0, parsedFecha[2].length() - 1));
        //Variable para corregir el Bug donde se refresca dos veces el combo Dia
        isComboNombre = true;
        //Selecionamos el Decanato
        comboDecanato.setSelectedIndex(seleccionaDecanato(listaV[ID].getDecanato()));

        //Mandamos a llamar la función que regresa el index del combo
        int indiceDia = 0, indiceMes = 0, indiceHora = 0;
        indiceDia = encuentraCombo(parsedFecha[1], comboDia);

        comboDia.setSelectedIndex(indiceDia);
        /* Arreglamos el problema donde agosto no funciona por problemas de
            Idioma */

        if (parsedFecha[2].equals("ago.")) {
            parsedFecha[2] = "aug.";
        }

        //buscamos el indice del Mes
        indiceMes = encuentraCombo(parsedFecha[2].substring(0, parsedFecha[2].length() - 1), comboMes);
        comboMes.setSelectedIndex(indiceMes);
        /* Si es p.m. en minusculas colocar en mayusculas, en otro caso
            que probablemente va a ser a.m. colocar AM*/
        parsedFecha[5] = (parsedFecha[5].equals("p.m.")) ? "PM" : "AM";

        indiceHora = encuentraCombo(parsedFecha[4].concat(" " + parsedFecha[5]), comboHorario);

        comboHorario.setSelectedIndex(indiceHora);
        campoAnio.setText(parsedFecha[3]);

        campoDir.setText(listaV[ID].getDireccion());

    }

    private int encuentraCombo(String dato, JComboBox combo) {
        int indice = 0;
        for (int x = 0; x < combo.getItemCount(); x++) {

            if (dato.equalsIgnoreCase(combo.getItemAt(x).toString())) {
                indice = x;
            }
        }
        return indice;
    }

    //Función que devuelve el Index del decanato en el Combobox
    private int seleccionaDecanato(String decanato) {
        indexDecanato = 0;
        for (int x = 0; x < comboDecanato.getItemCount(); x++) {
            if (comboDecanato.getItemAt(x).equals(decanato)) {
                indexDecanato = x;
            }
        }

        return indexDecanato;
    }

    //Funcion que separa la fecha en pedazos individuales
    private String[] parseFecha(String Fecha) {
        String datos[] = Fecha.split("(\\/)| ");
        return datos;
    }

    private void rellenaDiasMes(String mesSelected) {
        String elemento = mesSelected.toLowerCase();
        int seleccionado = Integer.parseInt(comboDia.getSelectedItem().toString());
        comboDia.removeAllItems();

        ///Validación de meses, si requiere 30 o 31 días.
        switch (elemento) {
            case "jul":
            case "aug":
                for (int x = 1; x <= 31; x++) {
                    comboDia.addItem("" + x);
                }
                break;
            case "may":
                for (int x = 20; x <= 31; x++) {
                    comboDia.addItem("" + x);
                }
                break;
            case "oct":
                for (int x = 1; x <= 12; x++) {
                    comboDia.addItem("" + x);
                }

                break;
            default:
                for (int x = 1; x <= 30; x++) {
                    comboDia.addItem("" + x);
                }

        }
        int itemSelected = 0;
        for (int x = 0; x <= comboDia.getItemCount(); x++) {
            if (x == seleccionado) {
                itemSelected = x;
            }
        }
        comboDia.setSelectedIndex(itemSelected);
    }

    private void comboDiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboDiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboDiaActionPerformed

    private void campoAnioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoAnioActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_campoAnioActionPerformed

    private void campoDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoDirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoDirActionPerformed

    private void comboMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboMesActionPerformed
        // TODO add your handling code here:
        JComboBox combo = (JComboBox) evt.getSource();
        if (isComboNombre == false) {
            System.out.println("Desde combo mes");
            rellenaDiasMes(combo.getSelectedItem().toString());
        } else {
            isComboNombre = false;
        }


    }//GEN-LAST:event_comboMesActionPerformed

    private void botonEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnviarActionPerformed
        // TODO add your handling code here:
        agregaVisita();
    }//GEN-LAST:event_botonEnviarActionPerformed

    private void campoAnioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoAnioFocusLost
        // TODO add your handling code here:
        if (!isInt(campoAnio.getText())) {
            campoAnio.setForeground(Color.red);
            validado = false;
        } else {
            campoAnio.setForeground(Color.BLACK);
            validado = true;
        }
    }//GEN-LAST:event_campoAnioFocusLost

    private void campoAnioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_campoAnioPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_campoAnioPropertyChange

    private void campoDirFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoDirFocusGained
        // TODO add your handling code here:
        campoDir.setBackground(Color.white);
        eEstado.setText("Estado:");
        eEstado.setForeground(Color.black);
    }//GEN-LAST:event_campoDirFocusGained

    private void campoDirFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoDirFocusLost
        // TODO add your handling code here:
        if (!validaCamposT(campoDir)) {

            campoDir.setBackground(Color.red);
            eEstado.setText("Estado: Ingresa una Dirección Valida");
            eEstado.setForeground(Color.red);
            validado = false;
        } else {
            campoDir.setBackground(Color.white);
            eEstado.setText("Estado:");
            eEstado.setForeground(Color.BLACK);
            validado = true;
        }
    }//GEN-LAST:event_campoDirFocusLost

    private void comboNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNombreActionPerformed
        // TODO add your handling code here:
        rellenaVisita(comboNombre.getSelectedIndex());
    }//GEN-LAST:event_comboNombreActionPerformed

    private void comboNombreItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboNombreItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_comboNombreItemStateChanged

    private void comboNombrePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboNombrePropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_comboNombrePropertyChange

    private void comboMesPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_comboMesPropertyChange
        // TODO add your handling code here:

    }//GEN-LAST:event_comboMesPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditVisita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditVisita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditVisita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditVisita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditVisita().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EtiquetaId;
    private javax.swing.JButton botonEnviar;
    private javax.swing.JTextField campoAnio;
    private javax.swing.JTextField campoDir;
    private javax.swing.JComboBox<String> comboDecanato;
    private javax.swing.JComboBox<String> comboDia;
    private javax.swing.JComboBox<String> comboHorario;
    private javax.swing.JComboBox<String> comboMes;
    private javax.swing.JComboBox<String> comboNombre;
    private javax.swing.JLabel eEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel labelId;
    // End of variables declaration//GEN-END:variables
}
